version: "3.8"

services:
  # --- Backend API (FastAPI) ---
  backend:
    build:
      context: ./backend
    # ports removed (exposed internally only)
    volumes:
      - ./backend:/app
      # This will be the main storage for original photos and thumbnails
      - storage_data:/srv/photo-timeline/storage
    environment:
      - DATABASE_URL=postgresql://user:password@postgres/phototimeline
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # --- Frontend (Next.js) ---
  frontend:
    build:
      context: ./frontend
    # ports removed (handled by nginx proxy)
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend

  # --- Background Worker (RQ) ---
  worker:
    build:
      context: ./backend
    command: ["python", "-u", "worker.py"]
    volumes:
      - ./backend:/app
      - storage_data:/srv/photo-timeline/storage
    environment:
      - DATABASE_URL=postgresql://user:password@postgres/phototimeline
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - postgres
      - backend

  # --- Database (PostgreSQL + PostGIS) ---
  postgres:
    image: postgis/postgis:16-3.4
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=phototimeline
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d phototimeline"]
      interval: 5s
      timeout: 5s
      retries: 5

  # --- Cache (Redis) ---
  redis:
    image: redis:7-alpine

  # --- Web Server (Nginx) ---
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "3067:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
  storage_data:
